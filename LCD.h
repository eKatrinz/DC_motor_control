#include <avr/io.h>
#include <avr/wdt.h>
#include <avr/interrupt.h>
#include <avr/pgmspace.h>
#include <util/delay.h>
#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>


// Макросы

#define sbit(port,bit) (port)|=(1<<(bit))
#define cbit(port,bit) (port) &=~(1<<(bit))

// Общие определения типов

#define u08 uint8_t
#define u16 uint16_t
#define u32 uint32_t

// Общие константы

#define	FALSE			(0)
#define	TRUE			(1)

// Порт для подключения экрана LCD Nokia 3310/5110

#define LCD_PORT      PORTB
#define LCD_DDR       DDRB

#define  RESET_PIN	0
#define  DC_PIN		1
#define  DIN_PIN	2
#define  SCK_PIN	3
#define  LED_PIN    4


// Константы для экрана LCD Nokia 3310/5110

#define GLCD_PIXELX			(84)
#define GLCD_PIXELY			(48)

#define USE_DOUBLE_SIZE_FONT

#define GLCD_FUNCTIONSET	(0x20)
#define GLCD_SETXADDR		(0x80)
#define GLCD_SETYADDR		(0x40)
#define	GLCD_DISPLAYBLANK	(0x08)
#define	GLCD_DISPLAYFLUSH	(0x09)
#define	GLCD_DISPLAYNORMAL	(0x0C)
#define	GLCD_DISPLAYINVERT	(0x0D)

#define GLCD_FUNCTIONSETEXT	(0x21)
#define GLCD_SET_BIAS		(0x10)
#define GLCD_SET_VOP		(0x80)
#define GLCD_TEMPCOEF		(0x06)	// TF = 2

#define GLCD_BIAS_1_100		(0x00)	// 1:100
#define GLCD_BIAS_1_80		(0x01)	// 1:80
#define GLCD_BIAS_1_65		(0x02)	// 1:65
#define GLCD_BIAS_1_48		(0x03)	// 1:48
#define GLCD_BIAS_1_40		(0x04)	// 1:40/1:34
#define GLCD_BIAS_1_24		(0x05)	// 1:24
#define GLCD_BIAS_1_18		(0x06)	// 1:18/1:16
#define GLCD_BIAS_1_10		(0x07)	// 1:10/1:9/1:8

// Полный набор символов ACSII
//
// - включает кириллические символы;
// - псевдографику;
// - 96 возможных пользовательских символа 
//   номера в массиме с 0x00 по 0x20 = итого 32 символа;
//   номера в массиме с 0x7F по 0xBF = итого 64 символа;  

static unsigned char FONT5x7[] PROGMEM =
{
  // запасной (пользовательский) символ 1
  0x7f, 0x7f, 0x00, 0x7f, 0x7f,
  
  // запасной (пользовательский) символ 2
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 3
  0x80, 0x80, 0x80, 0x80, 0x80,

  // запасной (пользовательский) символ 4
  0x01, 0x01, 0x01, 0x01, 0x01,

  // запасной (пользовательский) символ 5
  0x15, 0x1F, 0x15, 0x1F, 0x15,

  // запасной (пользовательский) символ 6
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 7
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 8
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 9
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 10
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 11
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 12
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 13
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 14
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 15
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 16
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 17
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 18
  0x00, 0x00, 0x00, 0x00, 0x00,
  
  // запасной (пользовательский) символ 19
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 20 
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 21
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 22
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 23
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 24
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 25
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 26
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 27
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 28
  0x00, 0x00, 0x00, 0x00, 0x00,
 
  // запасной (пользовательский) символ 29
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 30
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 31
  0x00, 0x00, 0x00, 0x00, 0x00,

  // запасной (пользовательский) символ 32
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x20 - пробел (пустое знакоместо).
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x21 - восклицательный знак.
  0x00, 0x06, 0x5f, 0x06, 0x00,

  // 0x22 - двойная кавычка.
  0x07, 0x03, 0x00, 0x07, 0x03,

  // 0x23 - решетка.
  0x24, 0x7e, 0x24, 0x7e, 0x24,

  // 0x24 - доллар.
  0x24, 0x2b, 0x6a, 0x12, 0x00,

  // 0x25 - процент.
  0x63, 0x13, 0x08, 0x64, 0x63,

  // 0x26 - амперсанд.
  0x36, 0x49, 0x56, 0x20, 0x50,

  // 0x27 - апостроф.
  0x00, 0x07, 0x03, 0x00, 0x00,

  // 0x28 - открывающая скобка.
  0x00, 0x3e, 0x41, 0x00, 0x00,

  // 0x29 - закрывающая скобка.
  0x00, 0x41, 0x3e, 0x00, 0x00,

  // 0x2a - звездочка (умножение).
  0x08, 0x3e, 0x1c, 0x3e, 0x08,

  // 0x2b - плюс.
  0x08, 0x08, 0x3e, 0x08, 0x08,

  // 0x2c - запятая.
  0x00, 0xe0, 0x60, 0x00, 0x00,

  // 0x2d - тире.
  0x08, 0x08, 0x08, 0x08, 0x08,

  // 0x2e - точка.
  0x00, 0x60, 0x60, 0x00, 0x00,

  // 0x2f - слеш слева-направо ('/').
  0x20, 0x10, 0x08, 0x04, 0x02,

  // 0x30 - '0'.
  0x3e, 0x41, 0x41, 0x41, 0x3e,

  // 0x31 - '1'.
  0x00, 0x42, 0x7f, 0x40, 0x00,

  // 0x32 - '2'.
  0x62, 0x51, 0x49, 0x49, 0x46,

  // 0x33 - '3'.
  0x22, 0x49, 0x49, 0x49, 0x36,

  // 0x34 - '4'.
  0x18, 0x14, 0x12, 0x7f, 0x10,

  // 0x35 - '5'.
  0x2f, 0x49, 0x49, 0x49, 0x31,

  // 0x36 - '6'.
  0x3c, 0x4a, 0x49, 0x49, 0x30,

  // 0x37 - '7'.
  0x01, 0x71, 0x09, 0x05, 0x03,

  // 0x38 - '8'.
  0x36, 0x49, 0x49, 0x49, 0x36,

  // 0x39 - '9'.
  0x06, 0x49, 0x49, 0x29, 0x1e,

  // 0x3a - двоеточие.
  0x00, 0x6c, 0x6c, 0x00, 0x00,

  // 0x3b - точка с запятой.
  0x00, 0xec, 0x6c, 0x00, 0x00,

  // 0x3c - меньше.
  0x08, 0x14, 0x22, 0x41, 0x00,

  // 0x3d - равно.
  0x24, 0x24, 0x24, 0x24, 0x24,

  // 0x3e - больше.
  0x00, 0x41, 0x22, 0x14, 0x08,

  // 0x3f - вопросительный знак.
  0x02, 0x01, 0x59, 0x09, 0x06,

  // 0x40 - "собака" ('@').
  0x3e, 0x41, 0x5d, 0x55, 0x1e,

  // 0x41 - 'A'.
  0x7e, 0x11, 0x11, 0x11, 0x7e,

  // 0x42 - 'B'.
  0x7f, 0x49, 0x49, 0x49, 0x36,

  // 0x43 - 'C'.
  0x3e, 0x41, 0x41, 0x41, 0x22,

  // 0x44 - 'D'.
  0x7f, 0x41, 0x41, 0x41, 0x3e,

  // 0x45 - 'E'.
  0x7f, 0x49, 0x49, 0x49, 0x41,

  // 0x46 - 'F'.
  0x7f, 0x09, 0x09, 0x09, 0x01,

  // 0x47 - 'G'.
  0x3e, 0x41, 0x49, 0x49, 0x7a,

  // 0x48 - 'H'.
  0x7f, 0x08, 0x08, 0x08, 0x7f,

  // 0x49 - 'I'.
  0x00, 0x41, 0x7f, 0x41, 0x00,

  // 0x4a - 'J'.
  0x30, 0x40, 0x40, 0x40, 0x3f,

  // 0x4b - 'K'.
  0x7f, 0x08, 0x14, 0x22, 0x41,

  // 0x4c - 'L'.
  0x7f, 0x40, 0x40, 0x40, 0x40,

  // 0x4d - 'M'.
  0x7f, 0x02, 0x04, 0x02, 0x7f,

  // 0x4e - 'N'.
  0x7f, 0x02, 0x04, 0x08, 0x7f,

  // 0x4f - 'O'.
  0x3e, 0x41, 0x41, 0x41, 0x3e,

  // 0x50 - 'P'.
  0x7f, 0x09, 0x09, 0x09, 0x06,

  // 0x51 - 'Q'.
  0x3e, 0x41, 0x51, 0x21, 0x5e,

  // 0x52 - 'R'.
  0x7f, 0x09, 0x09, 0x19, 0x66,

  // 0x53 - 'S'.
  0x26, 0x49, 0x49, 0x49, 0x32,

  // 0x54 - 'T'.
  0x01, 0x01, 0x7f, 0x01, 0x01,

  // 0x55 - 'U'.
  0x3f, 0x40, 0x40, 0x40, 0x3f,

  // 0x56 - 'V'.
  0x1f, 0x20, 0x40, 0x20, 0x1f,

  // 0x57 - 'W'.
  0x3f, 0x40, 0x3c, 0x40, 0x3f,

  // 0x58 - 'X'.
  0x63, 0x14, 0x08, 0x14, 0x63,

  // 0x59 - 'Y'.
  0x07, 0x08, 0x70, 0x08, 0x07,

  // 0x5a - 'Z'.
  0x71, 0x49, 0x45, 0x43, 0x00,

  // 0x5b - '['.
  0x00, 0x7f, 0x41, 0x41, 0x00,

  // 0x5c - '\'.
  0x02, 0x04, 0x08, 0x10, 0x20,

  // 0x5d - ']'.
  0x00, 0x41, 0x41, 0x7f, 0x00,

  // 0x5e - '^'.
  0x04, 0x02, 0x01, 0x02, 0x04,

  // 0x5f - '_'.
  0x80, 0x80, 0x80, 0x80, 0x80,

  // 0x60 - обратный апостроф.
  0x00, 0x03, 0x07, 0x00, 0x00,

  // 0x61 - 'a'.
  0x20, 0x54, 0x54, 0x54, 0x78,

  // 0x62 - 'b'.
  0x7f, 0x44, 0x44, 0x44, 0x38,

  // 0x63 - 'c'.
  0x38, 0x44, 0x44, 0x44, 0x28,

  // 0x64 - 'd'.
  0x38, 0x44, 0x44, 0x44, 0x7f,

  // 0x65 - 'e'.
  0x38, 0x54, 0x54, 0x54, 0x08,

  // 0x66 - 'f'.
  0x08, 0x7e, 0x09, 0x09, 0x00,

  // 0x67 - 'g'.
  0x18, 0xa4, 0xa4, 0xa4, 0x7c,

  // 0x68 - 'h'.
  0x7f, 0x04, 0x04, 0x78, 0x00,

  // 0x69 - 'i'.
  0x00, 0x00, 0x7d, 0x40, 0x00,

  // 0x6a - 'j'.
  0x40, 0x80, 0x84, 0x7d, 0x00,

  // 0x6b - 'k'.
  0x7f, 0x10, 0x28, 0x44, 0x00,

  // 0x6c - 'l'.
  0x00, 0x00, 0x7f, 0x40, 0x00,

  // 0x6d - 'm'.
  0x7c, 0x04, 0x18, 0x04, 0x78,

  // 0x6e - 'n'.
  0x7c, 0x04, 0x04, 0x78, 0x00,

  // 0x6f - 'o'.
  0x38, 0x44, 0x44, 0x44, 0x38,

  // 0x70 - 'p'.
  0xfc, 0x44, 0x44, 0x44, 0x38,

  // 0x71 - 'q'.
  0x38, 0x44, 0x44, 0x44, 0xfc,

  // 0x72 - 'r'.
  0x44, 0x78, 0x44, 0x04, 0x08,

  // 0x73 - 's'.
  0x08, 0x54, 0x54, 0x54, 0x20,

  // 0x74 - 't'.
  0x04, 0x3e, 0x44, 0x24, 0x00,

  // 0x75 - 'u'.
  0x3c, 0x40, 0x20, 0x7c, 0x00,

  // 0x76 - 'v'.
  0x1c, 0x20, 0x40, 0x20, 0x1c,

  // 0x77 - 'w'.
  0x3c, 0x60, 0x30, 0x60, 0x3c,

  // 0x78 - 'x'.
  0x6c, 0x10, 0x10, 0x6c, 0x00,

  // 0x79 - 'y'.
  0x9c, 0xa0, 0x60, 0x3c, 0x00,

  // 0x7a - 'z'.
  0x64, 0x54, 0x54, 0x4c, 0x00,

  // 0x7b - '{'.
  0x08, 0x3e, 0x41, 0x41, 0x00,

  // 0x7c - '|'.
  0x00, 0x00, 0x77, 0x00, 0x00,

  // 0x7d - '}'.
  0x00, 0x41, 0x41, 0x3e, 0x08,

  // 0x7e - '~'.
  0x02, 0x01, 0x02, 0x01, 0x00,

  // 0x7f
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x80
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x81
  0x00, 0x00, 0x00, 0x00, 0x00,
  
  // 0x82
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x83
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x84
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x85
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x86
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x87
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x88
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x89
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x8a
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x8b
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x8c
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x8d
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x8e
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x8f
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x90
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x91
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x92
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x93
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x94
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x95
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x96
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x97
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x98
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x99
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x9a
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x9b
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x9c
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x9d
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x9e
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0x9f
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa0
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa1
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa2
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa3
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa4
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa5
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa6
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa7
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa8
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xa9
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xaa
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xab
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xac
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xad
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xae
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xaf
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb0
  0x00, 0x00, 0x00, 0x00, 0x00,
  
  // 0xb1
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb2
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb3
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb4
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb5
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb6
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb7
  0x00, 0x00, 0x00, 0x00, 0x00,
  
  // 0xb8
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xb9
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xba
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xbb
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xbc
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xbd
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xbe
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xbf - пустое знакоместо.
  0x00, 0x00, 0x00, 0x00, 0x00,

  // 0xc0 - 'А'.
  0x7e, 0x11, 0x11, 0x11, 0x7e,

  // 0xc1 - 'Б'.
  0x7f, 0x49, 0x49, 0x49, 0x31,

  // 0xc2 - 'В'.
  0x7f, 0x49, 0x49, 0x49, 0x36,

  // 0xc3 - 'Г'.
  0x7f, 0x01, 0x01, 0x01, 0x01,

  // 0xc4 - 'Д'.
  0xc0, 0x7e, 0x41, 0x7f, 0xc0,

  // 0xc5 - 'Е'.
  0x7f, 0x49, 0x49, 0x49, 0x41,

  // 0xc6 - 'Ж'.
  0x77, 0x08, 0x7f, 0x08, 0x77,

  // 0xc7 - 'З'.
  0x22, 0x49, 0x49, 0x49, 0x36,

  // 0xc8 - 'И'.
  0x7f, 0x20, 0x10, 0x08, 0x7f,

  // 0xc9 - 'Й'.
  0x7e, 0x21, 0x11, 0x09, 0x7e,

  // 0xca - 'К'.
  0x7f, 0x08, 0x14, 0x22, 0x41,

  // 0xcb - 'Л'.
  0x40, 0x7e, 0x01, 0x01, 0x7f,

  // 0xcc - 'М'.
  0x7f, 0x02, 0x04, 0x02, 0x7f,

  // 0xcd - 'Н'.
  0x7f, 0x08, 0x08, 0x08, 0x7f,

  // 0xce - 'О'.
  0x3e, 0x41, 0x41, 0x41, 0x3e,

  // 0xcf - 'П'.
  0x7f, 0x01, 0x01, 0x01, 0x7f,

  // 0xd0 - 'Р'.
  0x7f, 0x09, 0x09, 0x09, 0x06,

  // 0xd1 - 'С'.
  0x3e, 0x41, 0x41, 0x41, 0x22,

  // 0xd2 - 'Т'.
  0x01, 0x01, 0x7f, 0x01, 0x01,

  // 0xd3 - 'У'.
  0x27, 0x48, 0x48, 0x48, 0x3f,

  // 0xd4 - 'Ф'.
  0x0e, 0x11, 0x7f, 0x11, 0x0e,

  // 0xd5 - 'Х'.
  0x63, 0x14, 0x08, 0x14, 0x63,

  // 0xd6 - 'Ц'.
  0x7f, 0x40, 0x40, 0x7f, 0xc0,

  // 0xd7 - 'Ч'.
  0x07, 0x08, 0x08, 0x08, 0x7f,

  // 0xd8 - 'Ш'.
  0x7f, 0x40, 0x7f, 0x40, 0x7f,

  // 0xd9 - 'Щ'.
  0x7f, 0x40, 0x7f, 0x40, 0xff,

  // 0xda - 'Ъ'.
  0x03, 0x01, 0x7f, 0x48, 0x30,

  // 0xdb - 'Ы'.
  0x7f, 0x48, 0x48, 0x30, 0x7f,

  // 0xdc - 'Ь'.
  0x7f, 0x48, 0x48, 0x48, 0x30,

  // 0xdd - 'Э'.
  0x22, 0x41, 0x49, 0x49, 0x3e,

  // 0xde - 'Ю'.
  0x7f, 0x08, 0x3e, 0x41, 0x3e,

  // 0xdf - 'Я'.
  0x66, 0x19, 0x09, 0x09, 0x7f,

  // 0xe0 - 'а'.
  0x20, 0x54, 0x54, 0x54, 0x78,

  // 0xe1 - 'б'.
  0x3c, 0x4a, 0x4a, 0x4a, 0x31,

  // 0xe2 - 'в'.
  0x7c, 0x54, 0x54, 0x54, 0x28,

  // 0xe3 - 'г'.
  0x7c, 0x04, 0x04, 0x0c, 0x00,

  // 0xe4 - 'д'.
  0x78, 0x44, 0x44, 0x7c, 0xc0,

  // 0xe5 - 'е'.
  0x38, 0x54, 0x54, 0x54, 0x08,

  // 0xe6 - 'ж'.
  0x6c, 0x10, 0x7c, 0x10, 0x6c,

  // 0xe7 - 'з'.
  0x28, 0x44, 0x54, 0x54, 0x28,

  // 0xe8 - 'и'.
  0x7c, 0x20, 0x10, 0x08, 0x7c,

  // 0xe9 - 'й'.
  0x7c, 0x20, 0x12, 0x0a, 0x7c,

  // 0xea - 'к'.
  0x7c, 0x10, 0x28, 0x44, 0x00,

  // 0xeb - 'л'.
  0x40, 0x38, 0x04, 0x04, 0x7c,

  // 0xec - 'м'.
  0x7c, 0x08, 0x10, 0x08, 0x7c,

  // 0xed - 'н'.
  0x7c, 0x10, 0x10, 0x10, 0x7c,

  // 0xee - 'о'.
  0x38, 0x44, 0x44, 0x44, 0x38,

  // 0xef - 'п'.
  0x7c, 0x04, 0x04, 0x04, 0x7c,

  // 0xf0 - 'р'.
  0xfc, 0x44, 0x44, 0x44, 0x38,

  // 0xf1 - 'с'.
  0x38, 0x44, 0x44, 0x44, 0x28,

  // 0xf2 - 'т'.
  0x04, 0x04, 0x7c, 0x04, 0x04,

  // 0xf3 - 'у'.
  0x9c, 0xa0, 0x60, 0x3c, 0x00,

  // 0xf4 - 'ф'.
  0x18, 0x24, 0x7c, 0x24, 0x18,

  // 0xf5 - 'х'.
  0x6c, 0x10, 0x10, 0x6c, 0x00,

  // 0xf6 - 'ц'.
  0x7c, 0x40, 0x40, 0x7c, 0xc0,

  // 0xf7 - 'ч'.
  0x0c, 0x10, 0x10, 0x10, 0x7c,

  // 0xf8 - 'ш'.
  0x7c, 0x40, 0x7c, 0x40, 0x7c,

  // 0xf9 - 'щ'.
  0x7c, 0x40, 0x7c, 0x40, 0xfc,

  // 0xfa - 'ъ'.
  0x0c, 0x04, 0x7c, 0x50, 0x20,

  // 0xfb - 'ы'.
  0x7c, 0x50, 0x50, 0x20, 0x7c,

  // 0xfc - 'ь'.
  0x7c, 0x50, 0x50, 0x50, 0x20,

  // 0xfd - 'э'.
  0x28, 0x44, 0x54, 0x54, 0x38,

  // 0xfe - 'ю'.
  0x7c, 0x10, 0x38, 0x44, 0x38,

  // 0xff - 'я'.
  0x48, 0x34, 0x14, 0x14, 0x7c
};




//
u08 nokia_where_x(void);
u08 nokia_where_y(void);
//
u08 nokia_get_contrast(void);
//
u08 nokia_get_inverse(void);
//
void nokia_w(u08 ch);

//
void nokia_cmd(u08 cmd);
//
void nokia_data(u08 ch);
static void nokia_set_addr(u08 x, u08 y);
void nokia_gotoxy(u08 x, u08 y);
//
void nokia_putchar(u08 ch);
//
void nokia_puts(const u08 *s);

//
void nokia_puts_prgm(const char *s);
//
void put_nibble(u08 b);
//
void nokia_2putchar(u08 ch);
//
void nokia_2puts(u08 *s);
//
void nokia_set_contrast(u08 contrast);
//
void nokia_set_inverse(u08 inv);

//
void nokia_init(void);
//
void nokia_clear(void);


//////////////////////////////////////////////////////////////
